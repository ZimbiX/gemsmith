RSpec.shared_context "with application dependencies" do
  let(:configuration) { Etcher.new(<%= configuration.project_namespaced_class %>::Container[:defaults]).call.bind(&:dup) }
  let(:xdg_config) { Runcom::Config.new <%= configuration.project_namespaced_class %>::Container[:defaults_path] }
  let(:kernel) { class_spy Kernel }
  let(:logger) { Cogger.new id: "<%= configuration.project_name %>", io: StringIO.new, level: :debug }

  before { <%= configuration.project_namespaced_class %>::Container.stub! configuration:, xdg_config:, kernel:, logger: }
  after { <%= configuration.project_namespaced_class %>::Container.restore }
end
